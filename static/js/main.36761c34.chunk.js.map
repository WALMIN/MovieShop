{"version":3,"sources":["features/movieList.js","components/ContentRow.jsx","components/MovieList.jsx","components/NavigationBar.js","components/Jumbotron.js","features/cart.js","components/Cart.js","components/Payment.js","components/Confirmation.js","features/favouriteList.js","components/Favourite.js","firebase.js","components/starrating/StarRating.js","components/movieInfo/MovieInformation.js","App.js","reportWebVitals.js","features/rootReducer.js","index.js"],"names":["isFetching","createAction","isFetchingMovieByGenre","successAllGenres","successAllMovies","succsess","faliure","listGenreFetched","listMoviesFetched","resetLists","pushPartFetch","actions","STATUS","initialState","status","arrayGenre","arrayMovieList","reducer","createReducer","state","action","value","payload","push","ContentRow","item","img","poster_path","Fragment","className","src","alt","MovieList","useSelector","movieList","dispatch","useDispatch","useState","useEffect","apiKey","url","console","log","fetch","then","response","a","json","data","ok","error","message","statusText","Promise","reject","genreArray","JSON","stringify","genres","parse","forEach","props","genreUrl","id","movies","results","myObj","name","catch","fetchAllMoviesByGenre","map","movie","to","NavigationBar","process","getRandomIndex","max","Math","floor","random","Jumbotron","randomMovieArray","randomIndex","randomIndex1","length","bg","backdrop_path","style","backgroundImage","original_title","overview","updateSubtotal","updatePayment","subtotal","payment","Cart","cart","setCart","setSubtotal","localCart","localStorage","getItem","product","t","quantity","price","updateItem","add","newCart","existingItem","find","filter","cartString","setItem","toFixed","onClick","title","removeItem","Payment","emailRegex","phoneRegex","cardAmericanExpressRegex","cardVisaRegex","cardMasterCard","firstName","setFirstName","lastName","setLastName","email","setEmail","phone","setPhone","country","setCountry","street","setStreet","streetOptional","setStreetOptional","postalCode","setPostalCode","city","setCity","paymentMethod","setPaymentMethod","cardNumber","setCardNumber","setCardExpire","cardCvc","setCardCvc","swishNumber","setSwishNumber","paypalEmail","setPaypalEmail","shipping","setShipping","shippingMethod","setShippingMethod","address","type","placeholder","autocomplete","onChange","i","target","required","for","min","maxlength","test","replace","substring","Confirmation","charset","charAt","generateID","addFavourites","deleteFavourites","items","filteredItems","Favourites","favouriteList","show","setShow","db","firebase","initializeApp","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","colors","auth","storage","ref","collection","StarRating","mId","movId","posts","setPosts","userComment","setUserComment","where","onSnapshot","snap","postsLists","doc","stars","Array","fill","currentValue","setCurrentValue","undefined","hoverValue","setHoverValue","handleMouseLeave","vari","movieRating","movieComments","_","index","color","onMouseOver","onMouseLeave","onBlur","event","e","newData","movieId","alert","POSTER_URL","MovieInformation","apiResponse","mov_id","addItem","newItem","setState","stringCart","m_id","this","movie_url","vote_average","original_language","vote_count","toLocaleString","runtime","gen","release_date","spoken_languages","sp_lang","english_name","href","homepage","production_companies","prd_comp","revenue","budget","popularity","Component","App","basename","exact","path","position","top","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","movieListReducer","favouriteListReducer","cartReducer","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"geAEMA,EAAaC,YAAa,sBAC1BC,EAAyBD,YAAa,+BACtCE,EAAmBF,YAAa,kBAChCG,EAAmBH,YAAa,sBAChCI,EAAWJ,YAAa,YACxBK,EAAUL,YAAa,WACvBM,EAAmBN,YAAa,uBAChCO,EAAoBP,YAAa,0BACjCQ,EAAaR,YAAa,mBAC1BS,EAAgBT,YAAa,6BAE7BU,EAAU,CAAEX,aAAYE,yBAAwBG,WAAUF,mBAAkBC,mBAAkBE,UAASC,mBAAkBC,oBAAmBC,aAAYC,iBAExJE,EACM,SADNA,EAEe,uBAFfA,EAGwB,iCAHxBA,EAIc,iBAJdA,EAKc,0BALdA,EAMQ,WANRA,EAOO,UAPPA,EAQ4B,+BAG5BC,EAAe,CACjBC,OAAQF,EACRG,WAAY,GACZC,eAAgB,IAGdC,EAAUC,YAAcL,GAAD,mBAGxBb,GAAa,SAACmB,EAAOC,GAAR,mBAAC,eAGRD,GAHO,IAKVL,OAAQF,OARa,cAWxBT,GAAmB,SAACgB,EAAOC,GAAR,mBAAC,eACdD,GADa,IAEhBL,OAAQF,OAba,cAgBxBV,GAAyB,SAACiB,EAAOC,GAAR,mBAAC,eACpBD,GADmB,IAEtBL,OAAQF,OAlBa,cAqBxBR,GAAmB,SAACe,EAAOC,GAAR,mBAAC,eACdD,GADa,IAEhBL,OAAQF,OAvBa,cA0BxBP,GAAW,SAACc,EAAOC,GAChB,IAAMC,EAAQD,EAAOE,QACrBH,EAAML,OAASO,KA5BM,cA+BxBf,GAAU,SAACa,EAAOC,GAAR,mBAAC,eACLD,GADI,IAEPL,OAAQF,OAjCa,cAoCxBF,GAAgB,SAACS,EAAOC,GAGrBD,EAAMH,eAAeO,KAAKH,EAAOE,SAEjCH,EAAML,OAASF,KAzCM,cA4CxBL,GAAmB,SAACY,EAAOC,GACxB,IAAMC,EAAQD,EAAOE,QAErBH,EAAMJ,WAAaM,EAGnBF,EAAML,OAASF,KAlDM,cAqDxBJ,GAAoB,SAACW,EAAOC,GACzB,IAAMC,EAAQD,EAAOE,QAGrBH,EAAMH,eAAeO,KAAKF,MAzDL,cA6DxBZ,GAAa,SAACU,EAAOC,GAClBD,EAAMJ,WAAa,GACnBI,EAAMH,eAAiB,MA/DF,I,uBCDdQ,EAxBI,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEbC,EAAM,KAIV,OAAW,MAARD,GAECC,EAAM,mCADID,EAAKE,YAIX,cAAC,IAAMC,SAAP,UACI,qBAAKC,UAAU,aAAaC,IAAKJ,EAAKK,IAAI,0BAMlD,8BACI,6C,QC0KGC,MA5LG,WACf,IAAMlB,EAASmB,aAAY,SAAAd,GAAK,OAAIA,EAAMe,UAAUpB,UAE9CE,GADaiB,aAAY,SAAAd,GAAK,OAAIA,EAAMe,UAAUnB,cACjCkB,aAAY,SAAAd,GAAK,OAAIA,EAAMe,UAAUlB,mBACtDmB,EAAWC,cAEpB,EAAwBC,mBAAS,MAAjC,6BASG,GAPAC,qBAAU,YA0FN,SAA+BH,GAGlCA,EAASxB,EAAQX,cACjB,IACMuC,EAAS,mCACXC,EAAG,UAFS,gDAET,oBAAyBD,GAChCE,QAAQC,IAAI,yBAEZC,MAAMH,GACDI,KADL,uCACU,WAAMC,GAAN,mBAAAC,EAAA,sEAEiBD,EAASE,OAF1B,UAEIC,EAFJ,OAIGH,EAASI,GAJZ,uBAKQC,EAASF,GAAQA,EAAKG,SAAYN,EAASO,WALnD,kBAMSC,QAAQC,OAAOJ,IANxB,OASIK,EAAaC,KAAKC,UAAUT,EAAKU,QAEvCF,KAAKG,MAAMJ,GAAYK,SAAQ,SAACC,GAI5B,IAEMC,EAAQ,iNAA6MD,EAAME,IAEjOpB,MAAMmB,GACDlB,KADL,uCACU,WAAMC,GAAN,qBAAAC,EAAA,sEAEiBD,EAASE,OAF1B,UAEIC,EAFJ,OAIGH,EAASI,GAJZ,uBAKQC,EAASF,GAAQA,EAAKG,SAAYN,EAASO,WALnD,kBAMSC,QAAQC,OAAOJ,IANxB,OASIc,EAAShB,EAAKiB,QAIdC,EAAQ,CACV,GAAML,EAAME,GACZ,KAAQF,EAAMM,KACd,OAAUH,GAMd7B,EAASxB,EAAQH,kBAAkB0D,IACnC/B,EAASxB,EAAQP,oBAvBf,4CADV,uDA4BKgE,OAAM,SAAAlB,GACHT,QAAQS,MAAM,qCAAuBA,SAhD/C,2CADV,uDA2DKkB,OAAM,SAAAlB,GACHT,QAAQS,MAAM,qCAAuBA,MA9JzCmB,CAAsBlC,KACxB,CAACA,IAKDrB,IAAWF,EACT,OACI,sOAEK6B,QAAQC,IAAI,wGAFjB,8EAKD,GAAI5B,IAAWF,EAClB,OACI,sOAEK6B,QAAQC,IAAI,2CAFjB,8EAKD,GAAI5B,IAAWF,EAClB,OACI,sOAEK6B,QAAQC,IAAI,2CAFjB,8EAMD,GAAI5B,IAAWF,EAClB,OACI,kZAGK6B,QAAQC,IAAI,uEAHjB,0NAQD,GAAI5B,IAAWF,EAAuB,CASxC,OACG,sBAAKiB,UAAU,wBAAf,eACKY,QAAQC,IAAI,+CADjB,uUAKS1B,EAAesD,KAAI,SAAC7C,GAAD,OAChB,sBAAKI,UAAU,sBAAf,eACI,oBAAIA,UAAU,cAAd,SAA8BJ,EAAK0C,OAInC,sBAAKtC,UAAU,+BAAf,iBACKJ,EAAKuC,OAAOM,KAAI,SAACC,GAAD,OACb,cAAC,IAAD,CAAMC,GAAE,qBAAgBD,EAAMR,IAAMlC,UAAU,4BAA9C,SAEI,cAAC,EAAD,CAAYJ,KAAM8C,kBAf9C,8EAyBH,OAAIzD,IAAWF,EAEZ,sOAEI,4BAAI,6DAFR,8EAMCE,IAAWF,EAEZ,UAFH,G,OCrFM6D,MAVf,WACE,OACE,sBAAK5C,UAAU,gBAAf,UACE,eAAC,IAAD,CAAMA,UAAU,kBAAkB2C,GAAG,IAArC,UAAyC,qBAAK1C,IAAM4C,+BAApD,UACA,eAAC,IAAD,CAAM7C,UAAU,kBAAkB2C,GAAG,cAArC,UAAmD,qBAAK1C,IAAM4C,qCAA9D,gBACA,eAAC,IAAD,CAAM7C,UAAU,kBAAkB2C,GAAG,QAArC,UAA6C,qBAAK1C,IAAM4C,+BAAxD,c,OC0CN,SAASC,EAAeC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAIvBI,I,EAAAA,EAjDG,WACd,IAAMhE,EAAiBiB,aAAY,SAAAd,GAAK,OAAIA,EAAMe,UAAUlB,kBAC5D,EAAgDqB,mBAAS,GAAzD,mBAEI4C,GAFJ,UAEuB,IAGnBC,EAAc,EACdC,EAAe,EAEnB,GAAGnE,EAAeoE,OAAS,EAAG,CAS9B,IAAIC,EAFM,oCALNJ,EAAmBjE,EADnBkE,EAAcP,EAAe3D,EAAeoE,SACGpB,QAE/CmB,EAAeR,EAAeM,EAAiBG,SACHE,cAK5C,OACI,qBAAKzD,UAAU,YAAY0D,MAAS,CAAEC,gBAAiB,uEAAuEH,EAAG,KAAjI,SACI,sBAAKxD,UAAU,WAAf,UAEI,6BAAKoD,EAAiBE,GAAcM,iBACpC,uBACA,4BAAIR,EAAiBE,GAAcO,WACnC,uBACA,+CACA,8CAAiBR,UAMjC,OACI,qBAAKrD,UAAU,YAAf,SACI,mD,QCzCN8D,G,OAAiB1F,YAAa,mBAC9B2F,EAAgB3F,YAAa,iBAE7BU,EAAU,CAAEgF,iBAAgBC,iBAO5B3E,EAAUC,YALK,CACnB2E,SAAU,EACVC,QAAS,KAGkB,iBAAC,EAC3BH,GAAkB,SAACxE,EAAOC,GACzB,MAAO,CACNyE,SAAUzE,EAAOE,YAHO,YAAC,EAO3BsE,GAAiB,SAACzE,EAAOC,GACxB,MAAO,CACN0E,QAAS1E,EAAOE,YATQ,ICyHdyE,MA/Hf,WACE,MAAwB1D,mBAAS,IAAjC,mBAAO2D,EAAP,KAAaC,EAAb,KACA,EAAgC5D,mBAAS,GAAzC,mBAAOwD,EAAP,KAAiBK,EAAjB,KAGA5D,qBAAU,WACR,IAAI6D,EAAYC,aAAaC,QAAQ,SACrCF,EAAY3C,KAAKG,MAAMwC,MAGrBF,EAAQE,GAERD,EAAY,GACZC,EAAU7B,KAAI,SAAAgC,GACZ,OAAOJ,GAAY,SAAAK,GAAC,OAAKA,EAAKD,EAAQE,SAAWF,EAAQG,eAM5D,IAEH,IAAMC,EAAa,SAAC3C,EAAI4C,GACtB,IAAIC,EAAO,YAAOZ,GAGda,EAAeD,EAAQE,MAAK,SAAArF,GAAI,OAAIA,EAAKsC,KAAOA,KACpD,GAAK8C,EAAL,CAGGF,EACDE,EAAaL,UAAY,EAGzBK,EAAaL,UAAY,EAKvBK,EAAaL,UAAY,IAC1BI,EAAUA,EAAQG,QAAO,SAAAtF,GAAI,OAAIA,EAAKsC,KAAOA,MAKhDkC,EAAQW,GACR,IAAII,EAAaxD,KAAKC,UAAUmD,GAChCR,aAAaa,QAAQ,OAAQD,GAG7Bd,EAAY,GACZU,EAAQtC,KAAI,SAAAgC,GACV,OAAOJ,GAAY,SAAAK,GAAC,OAAKA,EAAKD,EAAQE,SAAWF,EAAQG,cA0BvDtE,EAAWC,cAMjB,OACE,sBAAKP,UAAU,OAAf,UACE,yBAAQA,UAAU,cAAlB,UACE,sCACA,gCACE,qBAAIA,UAAU,QAAd,UAAuBgE,EAASqB,QAAQ,GAAxC,SACA,cAAC,IAAD,CAAMrF,UAAU,iBAAiB2C,GAAG,WAAW2C,QAAU,kBAX1C,SAACtB,GACtB1D,EAASxB,EAAQgF,eAAeE,IAUqCF,CAAeE,IAA9E,4BAGJ,+BACKG,EAAKZ,OAAS,EACfY,EAAK1B,KAAI,SAAAgC,GAAO,OACd,qBAAsBzE,UAAU,YAAhC,SACE,sBAAKA,UAAU,gBAAf,UACE,gCACE,cAAC,IAAD,CAAM2C,GAAE,qBAAgB8B,EAAQvC,IAAhC,SAAsC,qBAAKjC,IAAKwE,EAAQ5E,IAAKK,IAAKuE,EAAQc,UAC1E,sBAAKvF,UAAU,qBAAf,UACE,cAAC,IAAD,CAAM2C,GAAE,qBAAgB8B,EAAQvC,IAAMlC,UAAU,aAAhD,SAA8DyE,EAAQc,QACtE,sBAAKvF,UAAU,WAAf,UACE,qBAAKA,UAAU,oBAAoBC,IAAM4C,+BAAgDyC,QAAU,kBAAMT,EAAWJ,EAAQvC,IAAI,IAAShC,IAAI,WAC7I,mBAAGF,UAAU,WAAb,SAAyByE,EAAQE,WACjC,qBAAK3E,UAAU,uBAAuBC,IAAM4C,4BAA6CyC,QAAU,kBAAMT,EAAWJ,EAAQvC,IAAI,IAAQhC,IAAI,QAC5I,qBAAKF,UAAU,eAAeC,IAAM4C,+BAAgDyC,QAAU,kBAhD/F,SAACpD,GAClB,IAAI6C,EAAO,YAAOZ,GAGlBY,EAAUA,EAAQG,QAAO,SAAAtF,GAAI,OAAIA,EAAKsC,KAAOA,KAG7CkC,EAAQW,GACR,IAAII,EAAaxD,KAAKC,UAAUmD,GAChCR,aAAaa,QAAQ,OAAQD,GAG7Bd,EAAY,GACZU,EAAQtC,KAAI,SAAAgC,GACV,OAAOJ,GAAY,SAAAK,GAAC,OAAKA,EAAKD,EAAQE,SAAWF,EAAQG,YAkC2DY,CAAWf,EAAQvC,KAAMhC,IAAI,oBAIvI,oBAAGF,UAAU,aAAb,UAA2ByE,EAAQG,MAAMS,QAAQ,GAAjD,aAdMZ,EAAQvC,OAmBpB,sBAAKlC,UAAU,aAAf,UACE,qBAAKA,UAAU,YAAYC,IAAM4C,mCAAoD3C,IAAI,SACzF,mBAAGF,UAAU,YAAb,uCACA,oBAAGA,UAAU,WAAb,yCAAoD,uBAApD,+BACA,cAAC,IAAD,CAAMA,UAAU,aAAa2C,GAAG,IAAhC,wC,iBCgHG8C,MAvOf,WACE,IAAMxB,EAAU7D,aAAY,SAAAd,GAAK,OAAIA,EAAM6E,KAAKF,WAE5CyB,EAAa,yJACbC,EAAa,4DACbC,EAA2B,mBAC3BC,EAAgB,4BAChBC,EAAiB,6FAGrB,EAAkCtF,mBAAS,IAA3C,mBAAOuF,EAAP,KAAkBC,EAAlB,KACA,EAAgCxF,mBAAS,IAAzC,mBAAOyF,EAAP,KAAiBC,EAAjB,KACA,EAA0B1F,mBAAS,IAAnC,mBAAO2F,EAAP,KAAcC,EAAd,KACA,EAA0B5F,mBAAS,IAAnC,mBAAO6F,EAAP,KAAcC,EAAd,KACA,EAA8B9F,mBAAS,IAAvC,mBAAO+F,EAAP,KAAgBC,EAAhB,KACA,EAA4BhG,mBAAS,IAArC,mBAAOiG,EAAP,KAAeC,EAAf,KACA,EAA4ClG,mBAAS,IAArD,mBAAOmG,EAAP,KAAuBC,EAAvB,KACA,EAAoCpG,mBAAS,IAA7C,mBAAOqG,EAAP,KAAmBC,EAAnB,KACA,EAAwBtG,mBAAS,IAAjC,mBAAOuG,EAAP,KAAaC,EAAb,KAGA,EAA0CxG,mBAAS,IAAnD,mBAAOyG,EAAP,KAAsBC,EAAtB,KAEA,EAAoC1G,mBAAS,IAA7C,oBAAO2G,GAAP,MAAmBC,GAAnB,MACA,GAAoC5G,mBAAS,IAA7C,qBAAmB6G,IAAnB,aACA,GAA8B7G,mBAAS,IAAvC,qBAAO8G,GAAP,MAAgBC,GAAhB,MAEA,GAAsC/G,mBAAS,IAA/C,qBAAOgH,GAAP,MAAoBC,GAApB,MAEA,GAAsCjH,mBAAS,IAA/C,qBAAOkH,GAAP,MAAoBC,GAApB,MAEM3D,GAAW5D,aAAY,SAAAd,GAAK,OAAIA,EAAM6E,KAAKH,YACjD,GAAgCxD,mBAAS,GAAzC,qBAAOoH,GAAP,MAAiBC,GAAjB,MACA,GAA4CrH,mBAAS,IAArD,qBAAOsH,GAAP,MAAuBC,GAAvB,MASMzH,GAAWC,cACXwD,GAAgB,SAACoC,EAAO6B,EAASF,EAAgBb,EAAejD,EAAU4D,GAG9E,OAFAtH,GAASxB,EAAQiF,cAAc,CAACoC,EAAO6B,EAASF,EAAgBb,EAAejD,EAAU4D,KAElF,cAAC,IAAD,CAAUjF,GAAG,mBAKtB,OAAgB,IAAbqB,IAA8B,OAAZC,EACZ,cAAC,IAAD,CAAUtB,GAAG,UA2EpB,sBAAK3C,UAAU,UAAf,UACE,mBAAGA,UAAU,QAAb,6BACA,sBAAKA,UAAU,iBAAf,UACE,uBAAOiI,KAAK,OAAOC,YAAY,aAAaC,aAAa,aAAa3I,MAAOuG,EAAWqC,SAAU,SAAAC,GAAOrC,EAAaqC,EAAEC,OAAO9I,QAAU+I,UAAQ,IACjJ,uBAAON,KAAK,OAAOC,YAAY,YAAYC,aAAa,cAAc3I,MAAOyG,EAAUmC,SAAU,SAAAC,GAAOnC,EAAYmC,EAAEC,OAAO9I,QAAU+I,UAAQ,IAC/I,uBAAON,KAAK,OAAOC,YAAY,QAAQC,aAAa,QAAQ3I,MAAO2G,EAAOiC,SAAU,SAAAC,GAAOjC,EAASiC,EAAEC,OAAO9I,QAAU+I,UAAQ,IAC/H,uBAAON,KAAK,OAAOC,YAAY,QAAQC,aAAa,MAAM3I,MAAO6G,EAAO+B,SAAU,SAAAC,GAAO/B,EAAS+B,EAAEC,OAAO9I,QAAU+I,UAAQ,IAC7H,uBAAON,KAAK,OAAOC,YAAY,UAAUC,aAAa,eAAe3I,MAAO+G,EAAS6B,SAAU,SAAAC,GAAO7B,EAAW6B,EAAEC,OAAO9I,QAAU+I,UAAQ,IAC5I,uBAAON,KAAK,OAAOC,YAAY,+BAA+BC,aAAa,iBAAiB3I,MAAOiH,EAAQ2B,SAAU,SAAAC,GAAO3B,EAAU2B,EAAEC,OAAO9I,QAAU+I,UAAQ,IACjK,uBAAON,KAAK,OAAOC,YAAY,0CAA0C1I,MAAOmH,EAAgByB,SAAU,SAAAC,GAAOzB,EAAkByB,EAAEC,OAAO9I,UAC5I,uBAAOyI,KAAK,OAAOC,YAAY,cAAc1I,MAAOqH,EAAYuB,SAAU,SAAAC,GAAOvB,EAAcuB,EAAEC,OAAO9I,QAAU+I,UAAQ,IAC1H,uBAAON,KAAK,OAAOC,YAAY,OAAO1I,MAAOuH,EAAMqB,SAAU,SAAAC,GAAOrB,EAAQqB,EAAEC,OAAO9I,QAAU+I,UAAQ,OAGzG,mBAAGvI,UAAU,QAAb,sBA1GiB,CACnB,CAAC,WAAY,gBAAiB,+BAAgC,IAC9D,CAAC,MAAO,UAAW,+BAAgC,IACnD,CAAC,WAAY,eAAgB,2BAA4B,IACzD,CAAC,SAAU,aAAc,oCAAqC,KAwG7CyC,KAAI,SAAAmF,GAAQ,OACvB,sBAAK5H,UAAU,iBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOiI,KAAK,QAAQ3F,KAAK,WAAW9C,MAAOoI,EAAS,GAAItC,QAAU,WAC9DuC,GAAYD,EAAS,IACrBG,GAAkBH,EAAS,OAE/B,wBAAOY,IAAKZ,EAAS,GAArB,UACE,qBAAK3H,IAAM4C,8BAA+C+E,EAAS,KACnE,kCAAKA,EAAS,GAAd,eAGJ,mBAAG5H,UAAU,eAAb,SAA6B4H,EAAS,WAM5C,mBAAG5H,UAAU,QAAb,qBACA,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,8BACE,uBAAOiI,KAAK,QAAQ3F,KAAK,UAAU9C,MAAOyH,EAAe3B,QAAU,kBAAM4B,EAAiB,aAE5F,gCACE,qBAAKjH,IAAM4C,uCACX,qBAAK5C,IAAM4C,6CACX,qBAAK5C,IAAM4C,yDAGK,SAAlBoE,EACA,sBAAKjH,UAAU,sBAAf,UACE,uBAAOiI,KAAK,OAAOC,YAAY,cAAcC,aAAa,YAAY3I,MAAO2H,GAAYiB,SAAU,SAAAC,GAAOjB,GAAciB,EAAEC,OAAO9I,QAAUkE,MAAO,CAAC,gBAAiB,SAAU6E,UAAQ,IACtL,uBAAON,KAAK,QAAQE,aAAa,SAASC,SAAU,SAAAC,GAAOhB,GAAcgB,EAAEC,OAAO9I,QAAUkE,MAAO,CAAC,gBAAiB,SAAU6E,UAAQ,IACvI,uBAAON,KAAK,SAASC,YAAY,UAAUO,IAAI,IAAI1F,IAAI,OAAO2F,UAAU,IAAIP,aAAa,SAAS3I,MAAO8H,GAASc,SAAU,SAAAC,GAAOd,GAAWc,EAAEC,OAAO9I,QAAU+I,UAAQ,OAEzK,QAIN,sBAAKvI,UAAU,gBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,8BACE,uBAAOiI,KAAK,QAAQ3F,KAAK,UAAU9C,MAAOyH,EAAe3B,QAAU,kBAAM4B,EAAiB,eAE5F,8BACE,qBAAKjH,IAAM4C,8CAGK,WAAlBoE,EACA,qBAAKjH,UAAU,sBAAf,SACE,uBAAOiI,KAAK,OAAOC,YAAY,eAAeC,aAAa,QAAQ3I,MAAOkI,GAAaU,SAAU,SAAAC,GAAOV,GAAeU,EAAEC,OAAO9I,QAAU+I,UAAQ,MAElJ,QAIN,sBAAKvI,UAAU,gBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,8BACE,uBAAOiI,KAAK,QAAQ3F,KAAK,UAAU9C,MAAOyH,EAAe3B,QAAU,kBAAM4B,EAAiB,cAE5F,8BACE,qBAAKjH,IAAM4C,6CAGK,UAAlBoE,EACA,qBAAKjH,UAAU,sBAAf,SACE,uBAAOiI,KAAK,OAAOC,YAAY,eAAeC,aAAa,MAAM3I,MAAOgI,GAAaY,SAAU,SAAAC,GAAOZ,GAAeY,EAAEC,OAAO9I,QAAU+I,UAAQ,MAEhJ,QAIN,mBAAGvI,UAAU,QAAb,oBACA,oBAAGA,UAAU,QAAb,WAAuBgE,GAAW4D,IAAUvC,QAAQ,GAApD,SACGK,EAAWiD,KAAKxC,IAAUR,EAAWgD,KAAKtC,EAAMuC,QAAQ,IAAK,MAAqB,IAAbhB,KACpD,QAAjBX,GAA2BrB,EAAyB+C,KAAKxB,KAAetB,EAAc8C,KAAKxB,KAAerB,EAAe6C,KAAKxB,KAAeE,GAAc9D,OAAS,GAAM+D,IAAW,KAAOA,IAAW,OACtL,UAAjBL,GAA6BvB,EAAWiD,KAAKjB,KAC5B,SAAjBT,GAA4BtB,EAAWgD,KAAKnB,IAC7C,cAAC,IAAD,CAAM7E,GAAG,gBAAgB3C,UAAU,iBAAiBsF,QAvK1D,WACKI,EAAWiD,KAAKxC,IAAUR,EAAWgD,KAAKtC,EAAMuC,QAAQ,IAAK,MAAqB,IAAbhB,KAElD,QAAjBX,GACErB,EAAyB+C,KAAKxB,KACjCtB,EAAc8C,KAAKxB,KACnBrB,EAAe6C,KAAKxB,KACpBE,GAAc9D,OAAS,GACtB+D,IAAW,KAAOA,IAAW,QAE5BvD,GAAcoC,EAEA,CAACJ,EAAY,IAAME,EACnBQ,EACAE,EAAepD,OAAS,EAAKoD,EAAkB,GAC/CE,EACAE,EACAR,GAEAuB,GAAgBb,EAAgB,MAAQE,GAAW0B,UAAU,GAAI,IACjE7E,GAAU4D,IAEtBrD,aAAaiB,WAAW,SAKL,UAAjByB,EACHvB,EAAWiD,KAAKjB,MACjB3D,GAAcoC,EAEA,CAACJ,EAAY,IAAME,EACnBQ,EACAE,EAAepD,OAAS,EAAKoD,EAAkB,GAC/CE,EACAE,EACAR,GAEAuB,GAAgBb,EAAgB,MAAQS,GACxC1D,GAAU4D,IAEtBrD,aAAaiB,WAAW,SAKL,SAAjByB,GACHtB,EAAWgD,KAAKnB,MACjBzD,GAAcoC,EAEA,CAACJ,EAAY,IAAME,EACnBQ,EACAE,EAAepD,OAAS,EAAKoD,EAAkB,GAC/CE,EACAE,EACAR,GAEAuB,GAAgBb,EAAgB,MAAQO,GACxCxD,GAAU4D,IAEtBrD,aAAaiB,WAAW,WA2G5B,mCACA,wBAAQxF,UAAU,yBAAlB,uC,OC9JO8I,I,EAAAA,GAnEf,WACE,IAAM7E,EAAU7D,aAAY,SAAAd,GAAK,OAAIA,EAAM6E,KAAKF,WAchD,OAAGA,EAAQV,OAAS,EAEhB,qBAAKvD,UAAU,eAAf,SACE,iCACE,qBAAKA,UAAU,mBAAmBC,IAAM4C,kCAAmD3C,IAAI,cAC/F,oBAAIF,UAAU,oBAAd,6BACA,oBAAGA,UAAU,iBAAb,oBAlBR,SAAoBuD,GAIlB,IAHA,IAAIrB,EAAK,GACL6G,EAAU,uCAELV,EAAI,EAAGA,EAAI9E,EAAQ8E,IAC1BnG,GAAM6G,EAAQC,OAAOhG,KAAKC,MAAMD,KAAKE,SAAW6F,EAAQxF,SAG1D,OAAOrB,EAUqC+G,CAAW,OACjD,oBAAGjJ,UAAU,mBAAb,6DAAgF,4BAAIiE,EAAQ,KAA5F,eAEA,uBAEA,gCACE,mBAAGjE,UAAU,wBAAb,qBACA,oBAAGA,UAAU,uBAAb,UAAqCiE,EAAQ,GAAG,GAAG,uBAAMA,EAAQ,GAAG,GAAG,uBAAMA,EAAQ,GAAG,GAAsB,KAAlBA,EAAQ,GAAG,GAAY,sBAAU,uBAAWA,EAAQ,GAAG,GAAG,uBAAMA,EAAQ,GAAG,GAAG,uBAAMA,EAAQ,GAAG,SAG7L,gCACE,mBAAGjE,UAAU,wBAAb,6BACA,mBAAGA,UAAU,uBAAb,SAAqCiE,EAAQ,QAG/C,gCACE,mBAAGjE,UAAU,wBAAb,4BACA,mBAAGA,UAAU,uBAAb,SAAqCiE,EAAQ,QAG/C,uBAEA,gCACE,mBAAGjE,UAAU,wBAAb,sBACA,oBAAGA,UAAU,uBAAb,UAAqCiE,EAAQ,GAAGoB,QAAQ,GAAxD,YAGF,gCACE,mBAAGrF,UAAU,wBAAb,sBACA,oBAAGA,UAAU,uBAAb,UAAqCiE,EAAQ,GAAGoB,QAAQ,GAAxD,YAGF,gCACE,mBAAGrF,UAAU,wBAAb,mBACA,oBAAGA,UAAU,uBAAb,WAAsCiE,EAAQ,GAAKA,EAAQ,IAAIoB,QAAQ,GAAvE,iBAOD,cAAC,IAAD,CAAU1C,GAAG,WCjElBuG,I,OAAgB9K,YAAa,QAC7B+K,GAAmB/K,YAAa,UAEhCU,GAAU,CAAEoK,iBAAeC,qBAS3B/J,GAAUC,YAPK,CACnB+J,MAAO,CAAK,CAAC,EAAE,gBAAiB,iKAChC,CAAC,EAAE,kBAAmB,iKACtB,CAAC,EAAE,wBAAyB,6GAID,iBAAC,EACzBF,IAAiB,SAAC5J,EAAOC,GAGxB,OAAO,2BACHD,GADJ,IAEC8J,MAAM,GAAD,mBAAM9J,EAAM8J,OAAZ,CAAmB7J,EAAOE,eANT,YAAC,EAWzB0J,IAAoB,SAAC7J,EAAOC,GAE7B,IAAM8J,EAAgB/J,EAAM8J,MAAMlE,QAAO,SAAAtF,GAAI,OAAIA,EAAK,KAAOL,EAAOE,WAElE,OAAO,2BACFH,GADL,IAEE8J,MAAOC,OAjBc,ICqEdC,OA7Ef,WACE,IAAMC,EAAgBnJ,aAAY,SAAAd,GAAK,OAAIA,EAAMiK,cAAcH,SAGzD9I,EAAWC,cAOjB,EAAsBC,oBAAS,GAA/B,mBAAOgJ,EAAP,KAAYC,EAAZ,KACA,EAAsBjJ,oBAAS,GAA/B,mBAIA,OAJA,UAKE,sBAAKR,UAAU,YAAf,UAEE,yBAAQA,UAAU,cAAlB,UACE,8CAEA,qBAAKC,IAAM4C,6BAA8CyC,QAAS,kBAAImE,GAASD,SAKjF,qBAAKxJ,UAAW,UAAhB,SAEA,qBAAKA,UAAU,aAAf,SAIGuJ,EAAc9G,KAAI,SAAAgC,GAAO,OAExB,sBAAOzE,UAAW,iBAAlB,UAEE,sBAAKA,UAAU,cAAf,UAEE,qBAAKC,IAAKwE,EAAQ,KAElB,mBAAGzE,UAAU,aAAb,SAA2ByE,EAAQ,QAKrC,qBAAKzE,UAAU,mBAAf,SAIEwJ,EAAK,qBAAKvJ,IAAM4C,8BAA+CyC,QAAS,kBA7CtDpD,EA6C+EuC,EAAQ,QA5CnHnE,EAASxB,GAAQqK,iBAAiBjH,IADP,IAACA,KA6C8F,qB,4ECxCxHwH,IAfcC,KAASC,cACzB,CAGAlJ,OAAQ,0CACRmJ,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKRP,KAASQ,aCXdC,IDYOT,KAASU,OACNV,KAASW,UCZZ,WADPF,GAEK,UAGLG,GAAMb,GAAGc,WAAW,aA6GXC,OA3Gf,YAA8B,IACpBC,EADmB,EAARC,MAEjB/J,QAAQC,IAAI,yBAA2B6J,GAEvC,MAAyBlK,mBAAS,IAAlC,mBAAOoK,EAAP,KAAaC,EAAb,KACA,EAAsCrK,mBAAS,IAA/C,mBAAOsK,EAAP,KAAoBC,EAApB,KAEAtK,qBAAU,WAEN8J,GAAIS,MAAM,UAAU,KAAKN,GAAKO,YAAW,SAAAC,GACrC,IAAIC,EAAa,GACjBD,EAAKnJ,SAAQ,SAACqJ,GACV,IAAMjK,EAAOiK,EAAIjK,OACjBgK,EAAWzL,KAAKyB,GAChB0J,EAASM,MAEbvK,QAAQC,IAAI,sBAAwBsK,GAGrCvK,QAAQC,IAAI,kBAAmBgK,EAASrL,YAE5C,IAIF,IAAM6L,EAAQC,MAAM,GAAGC,KAAK,GAC5B,EAAuC/K,mBAAS,GAAhD,mBAAOgL,EAAP,KAAoBC,EAApB,KACA,EAAmCjL,wBAASkL,GAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAUMC,EAAmB,WACrBD,OAAcF,IA8BnB,OACI,sBAAK1L,UAAU,YAAf,UACI,wDAEI4K,EAAMnI,KAAI,SAACqJ,GACH,OACA,8BACI,8BAAIA,EAAKC,YAAc,IACvB,+BAAOD,EAAKE,wBAO5B,qBAAKhM,UAAU,OAAf,SACKqL,EAAM5I,KAAI,SAACwJ,EAAEC,GACV,OACI,cAAC,KAAD,CAAQlM,UAAU,aAEdmM,OAAUR,GAAcH,GAAgBU,EAAQ9B,GAAgBA,GAChE9E,QAAS,WA3D5BmG,EA2D8CS,EAAM,IACjCE,YAAa,WAxDhCR,EAwDsDM,EAAM,IACzCG,aAAcR,GAJTK,QAWrB,sBAAKlM,UAAU,WAAf,UACI,0BAAUA,UAAU,eAAekI,YAAY,iBAAkBoE,OAnC1D,SAAAC,GACf3L,QAAQC,IAAI,uBAAwBkK,IAkCyDvL,MAAOsL,EAAa1C,SAAU,SAACoE,GAAD,OACvHzB,EAAeyB,EAAElE,OAAO9I,UACpB,wBAAQQ,UAAU,YAAYsF,QA5DpB,WAGlB1E,QAAQC,IAAI,2BAA6BiK,GACzClK,QAAQC,IAAI,aAAe2K,GAE3B,IAAMiB,EAAU,CACZC,QAAShC,EACTqB,aAAcP,EACdQ,cAAelB,GAGnBP,GAAIzF,IAAI2H,GACP1L,MAAK,WACF4L,MAAM,yCACP/L,QAAQC,IAAI,qCAGf0B,OAAM,SAAClB,GACJT,QAAQS,MAAM,2BAA4BA,OAyCrC,2BCxGVuL,GAAa,kCAiKJC,G,+MApJXvN,MAAO,CACJwN,YAAY,KACZ3I,KAAK,GACL4I,OAAO,I,EA2BZC,QAAU,SAAC9K,EAAG+K,GACZ,IAAIlI,EAAU,EAAKzF,MAAM6E,KACrBa,EAAe,KACnBpE,QAAQC,IAAI,OAAQkE,GAChBA,IAAWC,EAAeD,EAAQE,MAAK,SAAArF,GAAI,OAAIA,EAAKsC,KAAOA,MAE3D8C,EAEFA,EAAaL,UAAY,GAGvB/D,QAAQC,IAAI,WAAaoM,EAAQ1H,OACjCR,EAAQrF,KAAKuN,IAGjB,EAAKC,SAAS,CAAC/I,KAAKY,IACpB,IAAIoI,EAAaxL,KAAKC,UAAUmD,GAChCR,aAAaa,QAAQ,OAAQ+H,I,+FAxC9B,oCAAAlM,EAAA,6DACOmM,EAAOC,KAAKrL,MAAME,GACxBtB,QAAQC,IAAI,WAAYuM,GACV,4CAEF,sCACNE,EADM,sCACQF,EAHN,4CAHf,SAOwBtM,MAAMwM,GAP9B,cAOOtM,EAPP,iBAQoBA,EAASE,OAR7B,QAQOC,EARP,OASCkM,KAAKH,SAAS,CAAEJ,YAAa3L,IAG7BkM,KAAKH,SAAS,CAAEH,OAAQ5L,EAAKe,MAGvBoC,EAAYC,aAAaC,QAAQ,UAGnC6I,KAAKH,SAAS,CAAC/I,KAAKxC,KAAKG,MAAMwC,KAlBpC,iD,0EA2CC,WAAS,IAAD,OAEJ,OAAK+I,KAAK/N,MAAMwN,YAKhB,sBAAK9M,UAAU,mBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKC,IAAO2M,GAAaS,KAAK/N,MAAMwN,YAAYhN,YAAcI,IAAI,OAGtE,sBAAKF,UAAU,WAAf,UACI,sBAAKA,UAAU,aAAf,UACI,mCAAMqN,KAAK/N,MAAMwN,YAAYvH,MAA7B,OACA,iCAAM,mCA7EN,GA6E0B8H,KAAK/N,MAAMwN,YAAYS,gBAAjD,UAEJ,sBAAKvN,UAAU,iBAAf,cAAkCqN,KAAK/N,MAAMwN,YAAY7N,OAAzD,IACI,sBAAMe,UAAU,OAAhB,SACI,4BAAIqN,KAAK/N,MAAMwN,YAAYU,yBAGnC,qBAAKxN,UAAU,UAAf,SACI,kCAAI,cAAC,KAAD,CAAQ0D,MAAO,CAACyI,MAAM,YAC1B,uBAAMnM,UAAU,eAAhB,UAAgCqN,KAAK/N,MAAMwN,YAAYS,aAAvD,OACA,uBAAMvN,UAAU,cAAhB,UAA+BqN,KAAK/N,MAAMwN,YAAYW,WAAWC,eAAe,SAAhF,iBAGJ,sBAAK1N,UAAU,UAAf,UACI,8BAAIqN,KAAK/N,MAAMwN,YAAYa,QAA3B,IAAoC,2CAExC,qBAAK3N,UAAU,SAAf,SACI,oBAAGA,UAAU,cAAb,eACQqN,KAAK/N,MAAMwN,YAAYjL,OAAOY,KAAI,SAACmL,GAAD,OAC9BA,EAAItL,QACJ,IAHZ,eAUJ,sBAAKtC,UAAU,WAAf,UACI,6BAAI,2CACJ,8BAAIqN,KAAK/N,MAAMwN,YAAYjJ,SAA3B,UAIJ,0BAAS7D,UAAU,gBAAnB,UACQ,uBAAOiI,KAAK,WAAW/F,GAAG,QAC1B,uBAAOlC,UAAU,SAASwI,IAAI,MAA9B,SAAoC,yDAEpC,sBAAKxI,UAAU,mBAAf,UACA,qBAAKA,UAAU,eAAf,SACI,kCAAI,+CAAJ,IAA2BqN,KAAK/N,MAAMwN,YAAYe,kBAEtD,qBAAK7N,UAAU,mBAAf,SACI,8BAAG,kDAAH,IAA6BqN,KAAK/N,MAAMwN,YAAYgB,iBAAiBrL,KAAI,SAACsL,GAAD,OAAYA,EAAQC,gBAAgB,SAEjH,qBAAKhO,UAAU,WAAf,SACI,kCAAI,mBAAGkC,GAAG,SAAS+L,KAAQZ,KAAK/N,MAAMwN,YAAYoB,SAAU5F,OAAO,SAA/D,6BAER,sBAAKtI,UAAU,uBAAf,UACI,6BAAI,0CACJ,6BAAI,wDACJ,4BAAIqN,KAAK/N,MAAMwN,YAAYqB,qBAAqB1L,KAAI,SAAC2L,GAAD,OAAaA,EAAS9L,QAAQ,SAEtF,qBAAKtC,UAAU,UAAf,SACI,8BAAG,yCAAgBqN,KAAK/N,MAAMwN,YAAYuB,QAAQX,eAAe,SAAjE,YAEJ,qBAAK1N,UAAU,SAAf,SACI,8BAAG,wCAAeqN,KAAK/N,MAAMwN,YAAYwB,OAAOZ,eAAe,SAA/D,YAEJ,qBAAK1N,UAAU,aAAf,SACI,8BAAG,4CAAmBqN,KAAK/N,MAAMwN,YAAYyB,WAA7C,eAIZ,uBACI,qBAAKvO,UAAU,UAAf,SACQ,cAAC,IAAD,CAAM2C,GAAG,QAAQ3C,UAAU,OAAOsF,QAAU,kBAAM,EAAK0H,QAAQ,EAAK1N,MAAMwN,YAAY5K,GAAI,CAACA,GAAI,EAAK5C,MAAMwN,YAAY5K,GAAIqD,MAAO,EAAKjG,MAAMwN,YAAYvH,MAAO1F,IAAK+M,GAAa,EAAKtN,MAAMwN,YAAYhN,YAAa8E,MA9I7N,GA8IgP,EAAKtF,MAAMwN,YAAYS,aAAc5I,SAAU,KAAvR,6BAGR,qBAAK3E,UAAU,kBAAf,SACS,cAAC,GAAD,CAAY2K,MAAS0C,KAAK/N,MAAMyN,iBAhF1C,wD,GAxDYyB,aCoB/B,IAkBeC,GA9Cf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,sBAAK1O,UAAU,MAAf,UACE,+BACA,eAAC,IAAD,WACE,eAAC,IAAD,CAAO2O,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,IACA,sBAAK5O,UAAU,uBAAuB0D,MAAO,CAACmL,SAAU,WAAYC,IAAK,QAAzE,eACE,cAAC,EAAD,UAGJ,eAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAlB,cAA2B,cAAC,EAAD,IAA3B,OACA,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,cAA8B,cAAC,EAAD,IAA9B,OACA,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,cAAmC,cAAC,GAAD,IAAnC,OACA,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,cAAnB,cAAkC,cAAC,GAAD,IAAlC,OACA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAAiBG,OAAQ,SAAC/M,GAAD,OAC/B,cAAC,GAAD,CAAWE,GAAIF,EAAMgN,MAAMC,OAAO/M,aAGhD,iCACE,cAAC,EAAD,YCrBKgN,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrO,MAAK,YAAkD,IAA/CsO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCICO,GANKC,aAAgB,CAChCtP,UAAWuP,EACXrG,cAAesG,GACf1L,KAAM2L,ICGJC,GAAQC,YAAe,CAE3B5Q,QAAUsQ,KAIZO,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJI,SAASC,eAAe,SAM1BlB,O","file":"static/js/main.36761c34.chunk.js","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst isFetching = createAction('is fetching GENRES');\r\nconst isFetchingMovieByGenre = createAction('is fetching MOVIES by GENRE');\r\nconst successAllGenres = createAction('success genres');\r\nconst successAllMovies = createAction('success all movies');\r\nconst succsess = createAction('succsess');\r\nconst faliure = createAction('faliure');\r\nconst listGenreFetched = createAction('genres done fetched');\r\nconst listMoviesFetched = createAction('subMovies done fetched');\r\nconst resetLists = createAction('resetting Lists');\r\nconst pushPartFetch = createAction('fetcher statuses succsess')\r\n\r\nconst actions = { isFetching, isFetchingMovieByGenre, succsess, successAllGenres, successAllMovies, faliure, listGenreFetched, listMoviesFetched, resetLists, pushPartFetch };\r\n\r\nconst STATUS = {\r\n    NORMAL: 'normal',\r\n    FETCHING_GENRES: 'Is fetching Genres..',\r\n    FETCHING_MOVIES_BY_GENRE: 'Is fetching Movies by Genres..',\r\n    SUCCESS_GENRES: 'Success GENRES',\r\n    SUCCESS_MOVIES: 'Success MOVIES BY GENRE',\r\n    SUCCSESS: 'succsess',\r\n    FALIURE: 'faliure',\r\n    API_FETCHER_STATUSES_SUCCESS: 'api fetcher statuses success'\r\n}\r\n\r\nconst initialState = {\r\n    status: STATUS.NORMAL,\r\n    arrayGenre: [],\r\n    arrayMovieList: []\r\n}\r\n\r\nconst reducer = createReducer(initialState, {\r\n\r\n    //STATUSAR\r\n    [isFetching]: (state, action) => ({\r\n    // Skriver en funktion som returnerar våran nya state\r\n    //...state = gör en kopia på den staten vi har \r\n        ...state,\r\n    //statuset i objectet ändrar vi till status.FETCHING_GENRES -> 'Is fetching Genres..'\r\n        status: STATUS.FETCHING_GENRES\r\n    }),\r\n    \r\n    [successAllGenres]: (state, action) => ({\r\n        ...state,\r\n        status: STATUS.SUCCESS_GENRES\r\n    }),\r\n    \r\n    [isFetchingMovieByGenre]: (state, action) => ({\r\n        ...state,\r\n        status: STATUS.FETCHING_MOVIES_BY_GENRE\r\n    }),\r\n    \r\n    [successAllMovies]: (state, action) => ({\r\n        ...state,\r\n        status: STATUS.SUCCESS_MOVIES\r\n    }),\r\n    \r\n    [succsess]: (state, action) => {\r\n        const value = action.payload;\r\n        state.status = value\r\n    },\r\n    \r\n    [faliure]: (state, action) => ({\r\n        ...state,\r\n        status: STATUS.FALIURE\r\n    }),\r\n\r\n    [pushPartFetch]: (state, action) => {\r\n\r\n\r\n        state.arrayMovieList.push(action.payload)\r\n      \r\n        state.status = STATUS.API_FETCHER_STATUSES_SUCCESS\r\n    },\r\n    \r\n    [listGenreFetched]: (state, action) => {\r\n        const value = action.payload; // Listan som skickats med från functionen (fetchAllGenres)\r\n    // state.arrayGenre.push(value); // Uppdatera [arrayGenre] det vi skickar med i slutet av listan (om vi skickar med ett object här ex. { id: 22, name: action } )\r\n        state.arrayGenre = value // Uppdatera [arrayGenre] med det vi skickar med i action, alltså en hel array [])\r\n    // State.STATUS.SUCCSESS ska inte vara här om du ska hämta alla filmer inom genren sen, så vi är inte klara med fetch här..\r\n    // state.status = STATUS.SUCCSESS\r\n        state.status = STATUS.FETCHING_MOVIES_BY_GENRE // men vi kan lägga en sån här så det blir tydligare\r\n    },\r\n    \r\n    [listMoviesFetched]: (state, action) => {\r\n        const value = action.payload; // Listan som skickats med från functionen (fetchAllMoviesByGenre)\r\n        //console.log('logg i redux movie', value)\r\n        //state.arrayMovieList = [value];\r\n        state.arrayMovieList.push(value) // Uppdatera [arrayMovieList], ... för att sprida ut arrayn, annars är den för stor för att push\r\n    // state.status = STATUS.FETCHING_MOVIES_BY_GENRE // men vi kan lägga en sån här så det blir tydligare\r\n    },\r\n    \r\n    [resetLists]: (state, action) => {\r\n        state.arrayGenre = []\r\n        state.arrayMovieList = []\r\n    },\r\n})\r\n\r\nexport {actions, reducer, STATUS};\r\n\r\n","import '../css/ContentRow.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { waitFor } from '@testing-library/dom';\r\n\r\n\r\n\r\nconst ContentRow = ({item}) => {\r\n    let imgPath = null;\r\n    let img = null;\r\n    //console.log('kmr vi hit?')\r\n    //console.log('Content row Item: ', item)\r\n\r\n    if(item != null) {\r\n        imgPath = item.poster_path;\r\n        img = \"https://image.tmdb.org/t/p/w500/\" + imgPath;\r\n\r\n        return( \r\n            <React.Fragment>\r\n                <img className=\"poster-img\" src={img} alt=\"No image available\"/>\r\n            </React.Fragment>  \r\n        )\r\n    }\r\n\r\n    return( \r\n        <div>\r\n            <p>Emptyness</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentRow;","import React, {useState, useEffect} from 'react'; \r\nimport reactDom from 'react-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\"; \r\nimport {actions, STATUS} from \"../features/movieList\" ;\r\nimport ContentRow from '../components/ContentRow';\r\nimport '../css/ContentRow.css';\r\nimport {Link} from \"react-router-dom\";\r\n \r\nconst MovieList = () => { \r\n   const status = useSelector(state => state.movieList.status); \r\n   const arrayGenre = useSelector(state => state.movieList.arrayGenre); \r\n   const arrayMovieList = useSelector(state => state.movieList.arrayMovieList); \r\n   const dispatch = useDispatch(); \r\n\r\nconst [list, setList] = useState(null);\r\n \r\n   useEffect(() => { \r\n        fetchAllMoviesByGenre(dispatch); \r\n   }, [dispatch]); \r\n \r\n//SUCCSESS: 'succsess', \r\n//FALIURE: 'faliure' \r\n \r\n   if(status === STATUS.NORMAL) { \r\n        return ( \r\n            <div> \r\n                {/*<h1>{STATUS.NORMAL}</h1> */}\r\n                {console.log('Redo för att ladda fakta! Börjar hämta alla genres!')} \r\n            </div> \r\n        ) \r\n    } else if (status === STATUS.FETCHING_GENRES) { \r\n        return ( \r\n            <div> \r\n                {/*<h1>{STATUS.FETCHING_GENRES}</h1> */}\r\n                {console.log('Hämtar nu alla genres')} \r\n            </div> \r\n        ) \r\n    } else if (status === STATUS.SUCCESS_GENRES) { \r\n        return ( \r\n            <div> \r\n                {/*<h1>{STATUS.SUCCESS_GENRES}</h1> */}\r\n                {console.log('Nu är arrayGenre klar')} \r\n                    \r\n            </div> \r\n        ) \r\n    } else if (status === STATUS.FETCHING_MOVIES_BY_GENRE) { \r\n        return ( \r\n            <div> \r\n                {/*<h1>{STATUS.FETCHING_MOVIES_BY_GENRE}</h1>*/}             \r\n                {/* map:ar alla i arrayGenre till en <p> */} \r\n                {console.log('Hämtar nu alla MOVIES enligt GENRES....')} \r\n       \r\n                  \r\n            </div> \r\n        ) \r\n    } else if (status === STATUS.SUCCESS_MOVIES) { \r\n    let filteredMovieList = []\r\n    let genreMovie = null;\r\n    //setList(arrayMovieList);\r\n    //console.log('Array movie List', arrayMovieList)\r\n    \r\n\r\n\r\n    \r\n         return ( \r\n            <div className=\"genre-movie-container\"> 2\r\n                {console.log('Nu är arrayMovieList klar')} \r\n                {/*<h1>{STATUS.FETCHING_MOVIES_BY_GENRE}</h1>\r\n                <p>{'Alla MOVIES nu hämtade utifrån GENRE'}</p> */}\r\n                 {/*console.log('Array Movie List: ', arrayMovieList)*/}\r\n                    {arrayMovieList.map((item) => (\r\n                        <div className=\"movie-row-container\"> 3\r\n                            <h1 className=\"genre-title\" >{item.name}</h1> \r\n                            {/*console.log('varje Item: ', item)*/}\r\n\r\n\r\n                            <div className=\"content-row-genre-item-movie\"> 3.2\r\n                                {item.movies.map((movie) => (\r\n                                    <Link to={`/MovieInfo/${movie.id}`} className=\"contentrow-link-container\">\r\n                                        {/*console.log('varje movie: ', movie)*/}\r\n                                        <ContentRow item={movie}/> \r\n                                    </Link>    \r\n                                ))}\r\n                             </div>\r\n\r\n                        </div>\r\n                    ))} \r\n            </div> \r\n        ) \r\n    }  \r\n    else if (status === STATUS.SUCCSESS) { \r\n        return ( \r\n            <div> \r\n                {/*<h1>{STATUS.SUCCSESS}</h1> */}\r\n                <p>{'Alla GENRES och MOVIES nu klara'}</p> \r\n            </div> \r\n        ) \r\n    } \r\n    else if (status === STATUS.FALIURE) { \r\n        return ( \r\n            null \r\n        ) \r\n    } \r\n \r\n} \r\n\r\nexport function fetchAllMoviesByGenre(dispatch) {\r\n  \r\n    //dispatch(actions.reset()); //reset OM DU går in på sidan igen, ska ligga i redux såklart\r\n    dispatch(actions.isFetching());\r\n    const baseUrl = 'https://api.themoviedb.org/3/genre/movie/list';\r\n    const apiKey = '3dbd54ecb77c41b970728ba04b569d4c';\r\n    let url = `${baseUrl}?api_key=${apiKey}`;\r\n    console.log(\"Fetching data...\")\r\n    \r\n    fetch(url)\r\n        .then(async response => {\r\n            \r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n            \r\n            const genreArray = JSON.stringify(data.genres)\r\n         \r\n            JSON.parse(genreArray).forEach((props) => {\r\n\r\n \r\n\r\n                var tempArr = [];\r\n       \r\n                const genreUrl = `https://api.themoviedb.org/3/discover/movie?api_key=3dbd54ecb77c41b970728ba04b569d4c&language=en-US&sort_by=popularity.asc&include_adult=false&include_video=false&page=1&vote_count.gte=7&with_genres=${props.id}`\r\n                \r\n                fetch(genreUrl)\r\n                    .then(async response => {\r\n  \r\n                        const data = await response.json();\r\n  \r\n                        if (!response.ok) {\r\n                            const error = (data && data.message) || response.statusText;\r\n                            return Promise.reject(error);\r\n                        }\r\n                        \r\n                        const movies = data.results;\r\n\r\n \r\n\r\n                        const myObj = {\r\n                            \"id\": props.id,\r\n                            \"name\": props.name,\r\n                            \"movies\": movies\r\n                        }\r\n\r\n \r\n\r\n                        \r\n                        dispatch(actions.listMoviesFetched(myObj));\r\n                        dispatch(actions.successAllMovies());\r\n                       \r\n                    })\r\n  \r\n                    .catch(error => {\r\n                        console.error('There was an error!', error);\r\n                    });\r\n\r\n \r\n\r\n             \r\n            });\r\n  \r\n    \r\n        })\r\n        .catch(error => {\r\n            console.error('There was an error!', error);\r\n        });\r\n\r\n \r\n\r\n     \r\n  }\r\n      \r\n    function createGenreItem(id, name) { \r\n        return { \r\n            id, \r\n            name \r\n        }; \r\n    } \r\n     \r\n    function createMovieItem(original_title) { \r\n        return { \r\n            original_title \r\n        }; \r\n    } \r\n\r\nexport default MovieList;","import './NavigationBar.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavigationBar() {\r\n  return (\r\n    <div className=\"NavigationBar\">\r\n      <Link className=\"NaviationButton\" to=\"/\"><img src={(process.env.PUBLIC_URL + \"/images/home.svg\")} />Home</Link>\r\n      <Link className=\"NaviationButton\" to=\"/favourites\"><img src={(process.env.PUBLIC_URL + \"/images/favourites.svg\")} />Favourites</Link>\r\n      <Link className=\"NaviationButton\" to=\"/cart\"><img src={(process.env.PUBLIC_URL + \"/images/cart.svg\")} />Cart</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import '../css/Jumbotron.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { waitFor } from '@testing-library/dom';\r\n\r\n\r\nconst Jumbotron = () => {\r\n    const arrayMovieList = useSelector(state => state.movieList.arrayMovieList); \r\n    const [randomMovieIndex, setRandomMovieIndex] = useState(0);\r\n\r\n    let randomMovieArray = [];\r\n    let posterPath = null;\r\n    let img = null\r\n    let randomIndex = 0;\r\n    let randomIndex1 = 0;\r\n    \r\n    if(arrayMovieList.length > 0) {\r\n        randomIndex = getRandomIndex(arrayMovieList.length);\r\n        randomMovieArray = arrayMovieList[randomIndex].movies;\r\n\r\n        randomIndex1 = getRandomIndex(randomMovieArray.length);\r\n        posterPath = randomMovieArray[randomIndex1].backdrop_path;\r\n        \r\n        img = \"https://image.tmdb.org/t/p/w500/\" + posterPath;\r\n        \r\n    var bg = img\r\n        return( \r\n            <div className=\"jumbotron\" style ={ { backgroundImage: \" linear-gradient(rgba(255, 99, 71, 0), rgba(20, 20, 20, 0.82)), url(\"+bg+\")\" } }>\r\n                <div className=\"synopsis\">\r\n                    {/*Vi vill ha en logo här*/}\r\n                    <h1>{randomMovieArray[randomIndex1].original_title}</h1>\r\n                    <br></br>\r\n                    <p>{randomMovieArray[randomIndex1].overview}</p>\r\n                    <br></br>\r\n                    <button>More Info</button>\r\n                    <p>RANDOM INDEX {randomIndex}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return( \r\n        <div className=\"jumbotron\" >\r\n            <p>Adult Yes? no? </p>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getRandomIndex(max, ) {\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\n\r\nexport default Jumbotron;","import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst updateSubtotal = createAction('updateSubtotal');\r\nconst updatePayment = createAction('updatePayment');\r\n\r\nconst actions = { updateSubtotal, updatePayment };\r\n\r\nconst initialState = {\r\n  subtotal: 0,\r\n  payment: []\r\n};\r\n\r\nconst reducer = createReducer(initialState, {\r\n  [updateSubtotal] : (state, action) => {\r\n    return {\r\n     subtotal: action.payload\r\n    }\r\n\r\n  },\r\n  [updatePayment] : (state, action) => {\r\n    return {\r\n     payment: action.payload\r\n    }\r\n\r\n  }\r\n\r\n});\r\n\r\nexport { actions, reducer };\r\n","import \"./Cart.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actions } from '../features/cart';\r\n\r\nfunction Cart() {\r\n  const [cart, setCart] = useState([]);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n\r\n  // Set state from local storage\r\n  useEffect(() => {\r\n    let localCart = localStorage.getItem(\"cart\");\r\n    localCart = JSON.parse(localCart);\r\n\r\n    if (localCart) {\r\n      setCart(localCart);\r\n\r\n      setSubtotal(0);\r\n      localCart.map(product => {\r\n        return setSubtotal(t => (t + (product.quantity * product.price)));\r\n\r\n      });\r\n\r\n    }\r\n\r\n  }, []);\r\n\r\n  const updateItem = (id, add) => {\r\n    let newCart = [...cart];\r\n\r\n    // See if item exist\r\n    let existingItem = newCart.find(item => item.id === id);\r\n    if (!existingItem) return\r\n\r\n    // Check if user wants to add or remove\r\n    if(add){\r\n      existingItem.quantity += 1;\r\n\r\n    } else {\r\n      existingItem.quantity -= 1;\r\n\r\n    }\r\n\r\n    // Delete if no items left\r\n    if (existingItem.quantity <= 0) {\r\n       newCart = newCart.filter(item => item.id !== id);\r\n\r\n    }\r\n\r\n    // Save state & local storage\r\n    setCart(newCart);\r\n    let cartString = JSON.stringify(newCart);\r\n    localStorage.setItem('cart', cartString);\r\n\r\n    // Update total price\r\n    setSubtotal(0);\r\n    newCart.map(product => {\r\n      return setSubtotal(t => (t + (product.quantity * product.price)));\r\n\r\n    });\r\n\r\n  }\r\n\r\n  const removeItem = (id) => {\r\n    let newCart = [...cart];\r\n\r\n    // Remove item from list\r\n    newCart = newCart.filter(item => item.id !== id);\r\n\r\n    // Save state & local storage\r\n    setCart(newCart);\r\n    let cartString = JSON.stringify(newCart);\r\n    localStorage.setItem('cart', cartString);\r\n\r\n    // Update total price\r\n    setSubtotal(0);\r\n    newCart.map(product => {\r\n      return setSubtotal(t => (t + (product.quantity * product.price)));\r\n\r\n    });\r\n\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const updateSubtotal = (subtotal) => {\r\n    dispatch(actions.updateSubtotal(subtotal));\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"Cart\">\r\n      <header className=\"Cart-header\">\r\n        <h1>Cart</h1>\r\n        <div>\r\n          <h2 className=\"Price\">{subtotal.toFixed(2)} kr</h2>\r\n          <Link className=\"CheckoutButton\" to=\"/payment\" onClick={ () => updateSubtotal(subtotal)}>Checkout</Link>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        { (cart.length > 0) ?\r\n          cart.map(product =>\r\n            <div key={product.id} className=\"MovieItem\">\r\n              <div className=\"MovieItemInfo\">\r\n                <div>\r\n                  <Link to={`/MovieInfo/${product.id}`}><img src={product.img} alt={product.title} /></Link>\r\n                  <div className=\"MovieItemInnerInfo\">\r\n                    <Link to={`/MovieInfo/${product.id}`} className=\"MovieTitle\">{product.title}</Link>\r\n                    <div className=\"Quantity\">\r\n                      <img className=\"QuantityAddButton\" src={(process.env.PUBLIC_URL + \"/images/remove.svg\")} onClick={ () => updateItem(product.id, false) } alt=\"Remove\"/>\r\n                      <p className=\"Quantity\">{product.quantity}</p>\r\n                      <img className=\"QuantityRemoveButton\" src={(process.env.PUBLIC_URL + \"/images/add.svg\")} onClick={ () => updateItem(product.id, true) } alt=\"Add\"/>\r\n                      <img className=\"RemoveButton\" src={(process.env.PUBLIC_URL + \"/images/delete.svg\")} onClick={ () => removeItem(product.id) } alt=\"Delete\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <p className=\"MoviePrice\">{product.price.toFixed(2)} kr</p>\r\n                </div>\r\n            </div>\r\n          )\r\n          :\r\n          <div className=\"Cart-empty\">\r\n            <img className=\"CartImage\" src={(process.env.PUBLIC_URL + \"/images/cart-empty.svg\")} alt=\"Cart\"/>\r\n            <p className=\"CartTitle\">Oops! Your cart is empty!</p>\r\n            <p className=\"CartText\">Looks like you haven't added<br/>anything to your cart yet</p>\r\n            <Link className=\"CartButton\" to=\"/\">Continue shopping</Link>\r\n          </div>\r\n        }\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import './Payment.css';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actions } from '../features/cart';\r\n\r\nfunction Payment() {\r\n  const payment = useSelector(state => state.cart.payment);\r\n\r\n  let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  let phoneRegex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\r\n  let cardAmericanExpressRegex = /^3[47][0-9]{13}$/;\r\n  let cardVisaRegex = /^4[0-9]{12}(?:[0-9]{3})?$/;\r\n  let cardMasterCard = /^5[1-5][0-9]{14}$|^2(?:2(?:2[1-9]|[3-9][0-9])|[3-6][0-9][0-9]|7(?:[01][0-9]|20))[0-9]{12}$/;\r\n\r\n  // Billing details\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [street, setStreet] = useState(\"\");\r\n  const [streetOptional, setStreetOptional] = useState(\"\");\r\n  const [postalCode, setPostalCode] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  // Payment\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n\r\n  const [cardNumber, setCardNumber] = useState(\"\");\r\n  const [cardExpire, setCardExpire] = useState(\"\");\r\n  const [cardCvc, setCardCvc] = useState(\"\");\r\n\r\n  const [swishNumber, setSwishNumber] = useState(\"\");\r\n\r\n  const [paypalEmail, setPaypalEmail] = useState(\"\");\r\n\r\n  const subtotal = useSelector(state => state.cart.subtotal);\r\n  const [shipping, setShipping] = useState(0);\r\n  const [shippingMethod, setShippingMethod] = useState(\"\");\r\n\r\n  const shippingList = [\r\n    [\"Postnord\", \"postnord.webp\", \"Delivery within 3-4 weekdays\", 29],\r\n    [\"DHL\", \"dhl.png\", \"Delivery within 3-4 weekdays\", 29],\r\n    [\"Instabox\", \"instabox.png\", \"Delivery within 1-2 days\", 39],\r\n    [\"Budbee\", \"budbee.png\", \"Home delivery within 1-2 weekdays\", 49]\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n  const updatePayment = (email, address, shippingMethod, paymentMethod, subtotal, shipping) => {\r\n    dispatch(actions.updatePayment([email, address, shippingMethod, paymentMethod, subtotal, shipping]));\r\n\r\n    return <Redirect to='/confirmation' />\r\n\r\n  }\r\n\r\n  // Go to cart if no price or payment info exist\r\n  if(subtotal === 0 || payment === null) {\r\n    return <Redirect to='/cart' />\r\n\r\n  }\r\n\r\n  function purchase() {\r\n    if(emailRegex.test(email) && phoneRegex.test(phone.replace(\" \", \"\")) && shipping !== 0){\r\n      // Card\r\n      if(paymentMethod == \"Card\") {\r\n        if(cardAmericanExpressRegex.test(cardNumber) ||\r\n        cardVisaRegex.test(cardNumber) ||\r\n        cardMasterCard.test(cardNumber) &&\r\n        setCardExpire.length > 0 &&\r\n        (cardCvc >= 100 && cardCvc <= 9999)){\r\n\r\n          updatePayment(email,\r\n\r\n                        [firstName + \" \" + lastName,\r\n                        street,\r\n                        streetOptional.length > 0 ? (streetOptional) : \"\",\r\n                        postalCode,\r\n                        city,\r\n                        country],\r\n\r\n                        shippingMethod, paymentMethod + \" - \" + cardNumber.substring(12, 16),\r\n                        subtotal, shipping);\r\n\r\n            localStorage.removeItem(\"cart\");\r\n\r\n        }\r\n\r\n    // PayPal\r\n    } else if(paymentMethod == \"PayPal\") {\r\n        if(emailRegex.test(paypalEmail)){\r\n          updatePayment(email,\r\n\r\n                        [firstName + \" \" + lastName,\r\n                        street,\r\n                        streetOptional.length > 0 ? (streetOptional) : \"\",\r\n                        postalCode,\r\n                        city,\r\n                        country],\r\n\r\n                        shippingMethod, paymentMethod + \" - \" + paypalEmail,\r\n                        subtotal, shipping);\r\n\r\n            localStorage.removeItem(\"cart\");\r\n\r\n        }\r\n\r\n    // Swish\r\n    } else if(paymentMethod == \"Swish\") {\r\n        if(phoneRegex.test(swishNumber)){\r\n          updatePayment(email,\r\n\r\n                        [firstName + \" \" + lastName,\r\n                        street,\r\n                        streetOptional.length > 0 ? (streetOptional) : \"\",\r\n                        postalCode,\r\n                        city,\r\n                        country],\r\n\r\n                        shippingMethod, paymentMethod + \" - \" + swishNumber,\r\n                        subtotal, shipping);\r\n\r\n            localStorage.removeItem(\"cart\");\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"Payment\">\r\n      <p className=\"Title\">Billing details</p>\r\n      <div className=\"BillingDetails\">\r\n        <input type=\"text\" placeholder=\"First name\" autocomplete=\"given-name\" value={firstName} onChange={i => { setFirstName(i.target.value) }} required />\r\n        <input type=\"text\" placeholder=\"Last name\" autocomplete=\"family-name\" value={lastName} onChange={i => { setLastName(i.target.value) }} required />\r\n        <input type=\"text\" placeholder=\"Email\" autocomplete=\"email\" value={email} onChange={i => { setEmail(i.target.value) }} required />\r\n        <input type=\"text\" placeholder=\"Phone\" autocomplete=\"tel\" value={phone} onChange={i => { setPhone(i.target.value) }} required />\r\n        <input type=\"text\" placeholder=\"Country\" autocomplete=\"country-name\" value={country} onChange={i => { setCountry(i.target.value) }} required />\r\n        <input type=\"text\" placeholder=\"Street name and house number\" autocomplete=\"street-address\" value={street} onChange={i => { setStreet(i.target.value) }} required />\r\n        <input type=\"text\" placeholder=\"Apartment, suite, unit, etc. (optional)\" value={streetOptional} onChange={i => { setStreetOptional(i.target.value) }} />\r\n        <input type=\"text\" placeholder=\"Postal code\" value={postalCode} onChange={i => { setPostalCode(i.target.value) }} required />\r\n        <input type=\"text\" placeholder=\"City\" value={city} onChange={i => { setCity(i.target.value) }} required />\r\n      </div>\r\n\r\n      <p className=\"Title\">Shipping</p>\r\n      {\r\n        shippingList.map(shipping =>\r\n          <div className=\"ShippingOption\">\r\n            <div className=\"ShippingTitle\">\r\n              <input type=\"radio\" name=\"shipping\" value={shipping[0]} onClick={ () => {\r\n                  setShipping(shipping[3]);\r\n                  setShippingMethod(shipping[0]);\r\n                }} />\r\n              <label for={shipping[0]}>\r\n                <img src={(process.env.PUBLIC_URL + \"/images/shipping/\" + shipping[1])} />\r\n                <p>+{shipping[3]} kr</p>\r\n              </label>\r\n            </div>\r\n            <p className=\"ShippingInfo\">{shipping[2]}</p>\r\n          </div>\r\n\r\n        )\r\n      }\r\n\r\n      <p className=\"Title\">Payment</p>\r\n      <div className=\"PaymentMethod\">\r\n        <div className=\"PaymentMethodTitle\">\r\n          <div>\r\n            <input type=\"radio\" name=\"payment\" value={paymentMethod} onClick={ () => setPaymentMethod(\"Card\") } />\r\n          </div>\r\n          <div>\r\n            <img src={(process.env.PUBLIC_URL + \"/images/payment/visa.jpg\")} />\r\n            <img src={(process.env.PUBLIC_URL + \"/images/payment/mastercard.png\")} />\r\n            <img src={(process.env.PUBLIC_URL + \"/images/payment/american-express.jpg\")} />\r\n          </div>\r\n        </div>\r\n        { paymentMethod === \"Card\" ?\r\n          <div className=\"PaymentMethodFields\">\r\n            <input type=\"text\" placeholder=\"Card number\" autocomplete=\"cc-number\" value={cardNumber} onChange={i => { setCardNumber(i.target.value) }} style={{\"margin-bottom\": \"1vmin\"}} required />\r\n            <input type=\"month\" autocomplete=\"cc-exp\" onChange={i => { setCardExpire(i.target.value) }} style={{\"margin-bottom\": \"1vmin\"}} required />\r\n            <input type=\"number\" placeholder=\"CVC/CVV\" min=\"0\" max=\"9999\" maxlength=\"4\" autocomplete=\"cc-csc\" value={cardCvc} onChange={i => { setCardCvc(i.target.value) }} required />\r\n          </div>\r\n          : null\r\n        }\r\n      </div>\r\n\r\n      <div className=\"PaymentMethod\">\r\n        <div className=\"PaymentMethodTitle\">\r\n          <div>\r\n            <input type=\"radio\" name=\"payment\" value={paymentMethod} onClick={ () => setPaymentMethod(\"PayPal\") } />\r\n          </div>\r\n          <div>\r\n            <img src={(process.env.PUBLIC_URL + \"/images/payment/paypal.png\")} />\r\n          </div>\r\n        </div>\r\n        { paymentMethod === \"PayPal\" ?\r\n          <div className=\"PaymentMethodFields\">\r\n            <input type=\"text\" placeholder=\"PayPal email\" autocomplete=\"email\" value={paypalEmail} onChange={i => { setPaypalEmail(i.target.value) }} required />\r\n          </div>\r\n          : null\r\n        }\r\n      </div>\r\n\r\n      <div className=\"PaymentMethod\">\r\n        <div className=\"PaymentMethodTitle\">\r\n          <div>\r\n            <input type=\"radio\" name=\"payment\" value={paymentMethod} onClick={ () => setPaymentMethod(\"Swish\") } />\r\n          </div>\r\n          <div>\r\n            <img src={(process.env.PUBLIC_URL + \"/images/payment/swish.svg\")} />\r\n          </div>\r\n        </div>\r\n        { paymentMethod === \"Swish\" ?\r\n          <div className=\"PaymentMethodFields\">\r\n            <input type=\"text\" placeholder=\"Swish number\" autocomplete=\"tel\" value={swishNumber} onChange={i => { setSwishNumber(i.target.value) }} required />\r\n          </div>\r\n          : null\r\n        }\r\n      </div>\r\n\r\n      <p className=\"Title\">To pay</p>\r\n      <p className=\"ToPay\">{(subtotal + shipping).toFixed(2)} kr</p>\r\n      { (emailRegex.test(email) && phoneRegex.test(phone.replace(\" \", \"\")) && shipping !== 0 &&\r\n        (paymentMethod == \"Card\" && cardAmericanExpressRegex.test(cardNumber) || cardVisaRegex.test(cardNumber) || cardMasterCard.test(cardNumber) && setCardExpire.length > 0 && (cardCvc >= 100 && cardCvc <= 9999)) ||\r\n        (paymentMethod == \"PayPal\" && emailRegex.test(paypalEmail)) ||\r\n        (paymentMethod == \"Swish\" && phoneRegex.test(swishNumber))) ?\r\n        <Link to=\"/confirmation\" className=\"PurchaseButton\" onClick={purchase}>Complete the purchase</Link> :\r\n        <button className=\"NotReadyPurchaseButton\">Complete the purchase</button>\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","import \"./Confirmation.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Confirmation() {\r\n  const payment = useSelector(state => state.cart.payment);\r\n\r\n  function generateID(length) {\r\n    var id = \"\";\r\n    var charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n      id += charset.charAt(Math.floor(Math.random() * charset.length));\r\n\r\n    }\r\n    return id;\r\n\r\n  }\r\n\r\n  if(payment.length > 0){\r\n    return (\r\n      <div className=\"Confirmation\">\r\n        <main>\r\n          <img className=\"ConfirmationIcon\" src={(process.env.PUBLIC_URL + \"/images/confirmed.svg\")} alt=\"confirmed\"/>\r\n          <h1 className=\"ConfirmationTitle\">Order confirmed</h1>\r\n          <p className=\"ConfirmationID\">Order #{generateID(10)}</p>\r\n          <p className=\"ConfirmationText\">We will be sending you an email confirmation to <b>{payment[0]}</b> shortly.</p>\r\n\r\n          <hr />\r\n\r\n          <div>\r\n            <p className=\"ConfirmationInfoTitle\">Address</p>\r\n            <p className=\"ConfirmationInfoText\">{payment[1][0]}<br/>{payment[1][1]}<br/>{payment[1][2]}{payment[1][2] === \"\" ? <b></b> : <br></br>}{payment[1][3]}<br/>{payment[1][4]}<br/>{payment[1][5]}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"ConfirmationInfoTitle\">Shipping method</p>\r\n            <p className=\"ConfirmationInfoText\">{payment[2]}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"ConfirmationInfoTitle\">Payment method</p>\r\n            <p className=\"ConfirmationInfoText\">{payment[3]}</p>\r\n          </div>\r\n\r\n          <br />\r\n\r\n          <div>\r\n            <p className=\"ConfirmationInfoTitle\">Subtotal</p>\r\n            <p className=\"ConfirmationInfoText\">{payment[4].toFixed(2)} kr</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"ConfirmationInfoTitle\">Shipping</p>\r\n            <p className=\"ConfirmationInfoText\">{payment[5].toFixed(2)} kr</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"ConfirmationInfoTitle\">Total</p>\r\n            <p className=\"ConfirmationInfoText\">{(payment[4] + payment[5]).toFixed(2)} kr</p>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n\r\n  } else {\r\n    return <Redirect to=\"/cart\"/>\r\n\r\n  }\r\n};\r\n\r\nexport default Confirmation;\r\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst addFavourites = createAction('add');\r\nconst deleteFavourites = createAction('delete');\r\n\r\nconst actions = { addFavourites, deleteFavourites };\r\n\r\nconst initialState = {\r\n  items: [    [0,\"Batman Begins\", \"https://sfanytime-images-prod.secure.footprint.net/COVERM/ba242472-c422-41dd-a724-9f81010f54bf_COVERM_01.jpg?w=375&fm=pjpg&s=cd8710e230dbe303f7f9795a38beba57\"],\r\n  [1,\"The Dark Knight\", \"https://sfanytime-images-prod.secure.footprint.net/COVERM/COVERM_b9e21514-0507-4965-a0a4-7ebb3971dd90_01.jpg?w=375&fm=pjpg&s=14f65063145150c9ab0b824200da9075\"],\r\n  [2,\"The Dark Knight Rises\", \"https://static0.colliderimages.com/wordpress/wp-content/uploads/the-dark-knight-rises-imax-poster.jpeg\"]]\r\n};\r\n\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [addFavourites] : (state, action) => {\r\n      \r\n  \r\n      return {\r\n       ...state,\r\n       items: [...state.items, action.payload],\r\n       \r\n      }\r\n  \r\n    },\r\n    [deleteFavourites] : (state, action) => {\r\n      \r\n    const filteredItems = state.items.filter(item => item[0] !== action.payload);\r\n  \r\n      return {\r\n        ...state,\r\n        items: filteredItems\r\n        \r\n       }\r\n  \r\n    }\r\n  \r\n  });\r\n  export { actions, reducer };","import React from 'react';\r\nimport './Favourite.css';\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actions } from '../features/favouriteList';\r\n\r\nfunction Favourites() {\r\n  const favouriteList = useSelector(state => state.favouriteList.items);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const deleteFromFavourites = (id) => {\r\n    dispatch(actions.deleteFavourites(id));\r\n\r\n  }\r\n\r\n\r\n  const [show,setShow]= useState(false)\r\n  const [edit,setEdit]= useState(false)\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      \r\n      <header className=\"SavedMovies\">\r\n        <h1>Saved Movies</h1>\r\n    \r\n        <img src={(process.env.PUBLIC_URL + \"/images/edit.svg\")} onClick={()=>setShow(!show)}/>\r\n\r\n      </header>\r\n      \r\n      \r\n      <div className= \"RowItem\">\r\n\r\n      <div className=\"MovieItems\">\r\n\r\n      \r\n\r\n        {favouriteList.map(product =>\r\n\r\n          <div   className= \"MovieContainer\">\r\n\r\n            <div className=\"MoviePoster\" >\r\n\r\n              <img src={product[2]} />\r\n\r\n              <p className=\"MovieTitle\">{product[1]}</p>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"RemoveFavourites\">\r\n              \r\n              {\r\n\r\n              show?<img src={(process.env.PUBLIC_URL + \"/images/clear.svg\")} onClick={()=>deleteFromFavourites(product[0])}/>:null\r\n              \r\n              }\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n        )}\r\n\r\n      </div>\r\n\r\n      \r\n      \r\n      \r\n\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Favourites;","import firebase from \"firebase\";\r\nconst firebaseApp = firebase.initializeApp(\r\n    {\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n    apiKey: \"AIzaSyAjIRBg6j-kTlaDtUK3t8gphrEdz0mTVTI\",\r\n    authDomain: \"movieshop-416b8.firebaseapp.com\",\r\n    projectId: \"movieshop-416b8\",\r\n    storageBucket: \"movieshop-416b8.appspot.com\",\r\n    messagingSenderId: \"167558452114\",\r\n    appId: \"1:167558452114:web:41e89ba165852727f2a74b\",\r\n    measurementId: \"G-BDL0KJDFF8\"\r\n  \r\n}\r\n);\r\n\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db,auth,storage }","import React,{ useState,useEffect, Component } from 'react';\r\nimport { FaStar } from 'react-icons/fa';\r\nimport \"./StarRating.css\";\r\nimport {db} from '../../firebase';\r\n\r\nconst colors = {\r\n    orange : \"#f8d568\",\r\n    grey : \"#696969\"\r\n};\r\n\r\nconst ref = db.collection('movieinfo');\r\n\r\nfunction StarRating({movId}) {\r\n    const mId = movId;\r\n    console.log(\"movieId in starrating:\" + mId);\r\n\r\n    const [posts,setPosts] = useState([]);\r\n    const [userComment, setUserComment] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        \r\n        ref.where('movieId','==',mId).onSnapshot(snap => {\r\n            var postsLists = [];\r\n            snap.forEach((doc) => {\r\n                const data = doc.data();\r\n                postsLists.push(data);\r\n                setPosts(postsLists);\r\n            });\r\n            console.log(\"Got from firestore:\" + postsLists);\r\n            //setPosts(snap.docs.map(doc=>doc.data()))\r\n            //setPosts(commentsList);\r\n           console.log(\"setPosts value:\"+ setPosts.value);\r\n        })\r\n    }, [])\r\n\r\n    \r\n\r\n     const stars = Array(5).fill(0);\r\n     const [currentValue,setCurrentValue] = useState(0);\r\n     const [hoverValue,setHoverValue] = useState(undefined);\r\n\r\n     const handleClick = value => {\r\n         setCurrentValue(value);\r\n     };\r\n\r\n     const handleMouseOver = value => {\r\n         setHoverValue(value)\r\n     };\r\n\r\n     const handleMouseLeave = () => {\r\n         setHoverValue(undefined)\r\n     };\r\n\r\n     const saveComments = () =>{\r\n        //event.preventDefault();\r\n        //setPosts(event);\r\n        console.log(\"User comments submitted:\" + userComment);\r\n        console.log(\"star value\" + currentValue);\r\n\r\n        const newData = {\r\n            movieId: mId,\r\n            movieRating: +currentValue,\r\n            movieComments: userComment\r\n        };\r\n        //Add new ratings & comments to firebase\r\n        ref.add(newData)\r\n        .then(() => {\r\n            alert('Added ratings & Comments successfully');\r\n           console.log(\"Document successfully written!\");\r\n           \r\n       })\r\n       .catch((error) => {\r\n           console.error(\"Error writing document: \", error);\r\n       });\r\n    };\r\n\r\n    const handleBlur = event => {\r\n        console.log('You finished typing:', setUserComment);\r\n    }\r\n     \r\n    return (\r\n        <div className=\"container\">\r\n            <h2> Ratings and Comments </h2>\r\n            {\r\n                posts.map((vari) => {\r\n                        return(\r\n                        <div>\r\n                            <p>{vari.movieRating + \" \"}\r\n                            <span>{vari.movieComments}</span>\r\n                            </p>\r\n                        </div>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n            <div className=\"star\"> \r\n                {stars.map((_,index) => {\r\n                    return(\r\n                        <FaStar className=\"ratingStar\"\r\n                            key={index}\r\n                            color = {(hoverValue || currentValue) > index ? colors.orange : colors.grey}\r\n                            onClick={() => handleClick(index+1)}\r\n                            onMouseOver={() => handleMouseOver(index+1)}\r\n                            onMouseLeave={handleMouseLeave}\r\n                        />\r\n                    )\r\n                })}\r\n                \r\n            </div>\r\n\r\n            <div className=\"comments\">\r\n                <textarea className=\"userComments\" placeholder=\"Write Comments\"  onBlur={handleBlur} value={userComment} onChange={(e)=>\r\n            setUserComment(e.target.value)}/>\r\n                <button className=\"submitBtn\" onClick = {saveComments}>Submit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarRating;","import React, { Component } from \"react\";\r\nimport './MovieInformation.css';\r\nimport { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FaStar} from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StarRating from '../starrating/StarRating'; \r\n\r\n\r\nconst POSTER_URL = \"https://image.tmdb.org/t/p/w500\"\r\nconst MOVIE_PRICE = 79\r\n//const arrayMovieList = useSelector(state => state.movieList.arrayMovieList); \r\n\r\n//const arrayMovieList = useSelector(state => state.movieList.arrayMovieList);\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return{\r\n    arrayMovieList: state.movieList.arrayMovieList\r\n    }\r\n  }*/\r\nclass MovieInformation extends Component {\r\n\r\n    state ={\r\n       apiResponse:null,\r\n       cart:[],\r\n       mov_id:\"\"\r\n   };\r\n   \r\n   \r\n   async componentDidMount() {\r\n    const m_id = this.props.id;\r\n    console.log(\"Movie Id\"+ m_id);\r\n    const api_key=\"?api_key=3dbd54ecb77c41b970728ba04b569d4c\"\r\n    //const movie_url = \"https://api.themoviedb.org/3/movie/106646?api_key=3dbd54ecb77c41b970728ba04b569d4c\";\r\n    const url = \"https://api.themoviedb.org/3/movie/\";\r\n    const movie_url=url+m_id+api_key;\r\n    const response = await fetch(movie_url);\r\n    const data = await response.json();\r\n    this.setState({ apiResponse: data});\r\n\r\n    //Setting state for movId \r\n    this.setState({ mov_id: data.id});\r\n    \r\n    //Cart \r\n    const localCart = localStorage.getItem(\"cart\");\r\n    if(localCart) \r\n    {\r\n        this.setState({cart:JSON.parse(localCart)});\r\n    }\r\n  }\r\n\r\n\r\n  addItem = (id,newItem) => {\r\n    let newCart = this.state.cart;\r\n    let existingItem = null;\r\n    console.log(\"Cart\"+ newCart);\r\n    if (newCart) { existingItem = newCart.find(item => item.id === id);}\r\n    // Add to quantity if items exist or add new item    \r\n    if (existingItem) \r\n    {\r\n      existingItem.quantity += 1;\r\n    } else \r\n    {\r\n        console.log(\"New Cart\" + newItem.title);\r\n        newCart.push(newItem);\r\n    }\r\n    // Save state & local storage    \r\n    this.setState({cart:newCart});\r\n    let stringCart = JSON.stringify(newCart);\r\n    localStorage.setItem(\"cart\", stringCart) \r\n  }\r\n  \r\n    render(){\r\n        \r\n        if (!this.state.apiResponse) {\r\n            \r\n            return <div>didn't get a Data</div>;\r\n          }\r\n        return (\r\n        <div className=\"viewMovieDetails\">\r\n            <div className=\"poster_img\">\r\n                <img src= { POSTER_URL + this.state.apiResponse.poster_path } alt=\"\"  />\r\n            </div>\r\n\r\n            <div className=\"movieBox\">\r\n                <div className=\"movieTitle\">\r\n                    <h2> {this.state.apiResponse.title} </h2>\r\n                    <span><b> ${MOVIE_PRICE + this.state.apiResponse.vote_average}</b> </span>\r\n                </div>\r\n                <div className=\"release_status\">({this.state.apiResponse.status})\r\n                    <span className=\"lang\">\r\n                        <b>{this.state.apiResponse.original_language}</b>\r\n                    </span>\r\n                </div>\r\n                <div className=\"ratings\">\r\n                    <p> <FaStar style={{color:\"yellow\"}}/>\r\n                    <span className=\"rating_value\">{this.state.apiResponse.vote_average} </span>\r\n                    <span className=\"vote_counts\">{this.state.apiResponse.vote_count.toLocaleString(\"en-US\")} votes</span>\r\n                    </p>\r\n                </div>       \r\n                <div className=\"runtime\">\r\n                    <p>{this.state.apiResponse.runtime} <i>minutes</i></p>\r\n                  \r\n                <div className=\"genres\">\r\n                    <p className=\"classGenres\" >  { \r\n                            this.state.apiResponse.genres.map((gen)=>\r\n                                gen.name\r\n                             ) +\" \"\r\n\r\n                        }    </p>\r\n                   \r\n                </div>\r\n                </div>\r\n              \r\n                <div className=\"overview\">\r\n                    <h3><u>Overview</u></h3>  \r\n                    <p>{this.state.apiResponse.overview} </p>\r\n                    \r\n                </div>\r\n                \r\n                <section className=\"technicalInfo\"> \r\n                        <input type=\"checkbox\" id=\"chk\" />\r\n                        <label className=\"chkBtn\" for=\"chk\"><u> Technical Information</u></label>\r\n                            \r\n                        <div className=\"technicalContent\">\r\n                        <div className=\"release-date\">\r\n                            <p> <b>Released Date:</b> {this.state.apiResponse.release_date}</p>\r\n                        </div>\r\n                        <div className=\"spoken-languages\">\r\n                            <p><b>Spoken Languages:</b> {this.state.apiResponse.spoken_languages.map((sp_lang)=> sp_lang.english_name) + \" \" }</p>\r\n                        </div>\r\n                        <div className=\"homepage\"> \r\n                            <p> <a id=\"hmpage\" href = {this.state.apiResponse.homepage} target=\"_blank\">Visit Site</a></p>\r\n                        </div>\r\n                        <div className=\"production-companies\">\r\n                            <h4><u>Credits</u></h4>\r\n                            <h4><u>Production Companies:</u></h4>\r\n                            <p>{this.state.apiResponse.production_companies.map((prd_comp)=> prd_comp.name) + \" \"}</p>\r\n                        </div>\r\n                        <div className=\"revenue\"> \r\n                            <p><b>Revenue:</b>{this.state.apiResponse.revenue.toLocaleString(\"en-US\")} USD</p>\r\n                        </div>\r\n                        <div className=\"budget\"> \r\n                            <p><b>Budget:</b>{this.state.apiResponse.budget.toLocaleString(\"en-US\")} USD</p>\r\n                        </div>\r\n                        <div className=\"popularity\"> \r\n                            <p><b>Popularity:</b>{this.state.apiResponse.popularity} </p>\r\n                        </div>\r\n                      </div>  \r\n                </section>\r\n                <br/>\r\n                    <div className=\"addCart\">\r\n                            <Link to=\"/Cart\" className=\"cart\" onClick={ () => this.addItem(this.state.apiResponse.id, {id: this.state.apiResponse.id, title: this.state.apiResponse.title, img: POSTER_URL + this.state.apiResponse.poster_path, price: MOVIE_PRICE+this.state.apiResponse.vote_average, quantity: 1}) }> ADD TO CART </Link>\r\n                    </div> \r\n\r\n                    <div className=\"ratingsComments\">\r\n                             <StarRating movId = {this.state.mov_id} />  \r\n                            \r\n                    </div>\r\n                </div>\r\n                       \r\n        </div>\r\n                \r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default MovieInformation;","import './App.css';\r\nimport MovieList from './components/MovieList';\r\nimport { useSelector } from 'react-redux';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport Jumbotron from './components/Jumbotron';\r\nimport Cart from './components/Cart';\r\nimport Payment from './components/Payment';\r\nimport Confirmation from './components/Confirmation';\r\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\r\nimport Favourite  from './components/Favourite';\r\nimport MovieInfo from './components/movieInfo/MovieInformation';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <div className=\"App\">\r\n        <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Jumbotron />\r\n            <div className=\"movie-list-container\" style={{position: \"absolute\", top: \"65vh\"}}> 1\r\n              <MovieList />\r\n            </div>\r\n          </Route>\r\n          <Route exact path=\"/cart\"> <Cart /> </Route>\r\n          <Route exact path=\"/payment\"> <Payment /> </Route>\r\n          <Route exact path=\"/confirmation\"> <Confirmation /> </Route>\r\n          <Route exact path= \"/favourites\"> <Favourite /> </Route>\r\n          <Route exact path=\"/MovieInfo/:id\" render={(props) => (\r\n                      <MovieInfo id={props.match.params.id}/>)}/>\r\n        </Switch>\r\n        </main>\r\n        <footer>\r\n          <NavigationBar />\r\n        </footer>\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst TestMovieList = () => {\r\n  const apiList = useSelector(state => state.movieList.fact);\r\n\r\n  if (apiList != null) {\r\n    return (\r\n      <div style={{background: '#f3f3f3'}}>\r\n        {apiList.map((item) => (\r\n          <p>{item.id} {item.name}</p>\r\n        ))}\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>Ingen laddad lista, vänta.....</div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { reducer as movieListReducer } from './movieList';\r\nimport { reducer as favouriteListReducer} from './favouriteList'\r\nimport { reducer as cartReducer} from './cart'\r\n\r\nconst rootReducer = combineReducers({\r\n    movieList: movieListReducer,\r\n    favouriteList: favouriteListReducer,\r\n    cart: cartReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport rootReducer from './features/rootReducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { Provider } from 'react-redux';\r\n\r\n//vår store\r\nconst store = configureStore({\r\n  //funktion som konfigurerar vår store \r\n  reducer : rootReducer\r\n});\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}